// Generated by CoffeeScript 1.6.3
(function() {
  var A, B, C, _extends,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  _extends = function(child, parent) {
    var ctor, key, val;
    for (key in parent) {
      if (!__hasProp.call(parent, key)) continue;
      val = parent[key];
      child[key] = parent[key];
    }
    ctor = function() {
      return this.constructor = child;
    };
    ctor.prototype = parent.prototype;
    child.prototype = new ctor();
    child.__super__ = parent.prototype;
    return child;
  };

  A = (function() {
    function A() {
      this.x = 1;
    }

    A.a = 1;

    A.b = 2;

    A.prototype.c = 3;

    A.prototype.d = 4;

    A.prototype.e = function() {};

    return A;

  })();

  B = (function(_super) {
    __extends(B, _super);

    function B() {
      this.y = 1;
      B.__super__.constructor.apply(this, arguments);
    }

    B.a = 5;

    B.prototype.c = 6;

    B.prototype.e = function() {
      return B.__super__.e.apply(this, arguments);
    };

    return B;

  })(A);

  C = function() {
    var _ref;
    _ref = C.__super__.constructor.apply(this, arguments);
    return _ref;
  };

  _extends(C, A);

  C.a = 5;

  C.prototype.c = 6;

  C.prototype.e = function() {
    return C.__super__.e.apply(this, arguments);
  };

  console.log(B.a);

  console.log(C.a);

}).call(this);
